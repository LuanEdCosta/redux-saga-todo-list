{"version":3,"sources":["styles/GlobalStyles.js","store/ducks/task/reducers.js","store/ducks/task/actions.js","store/ducks/task/types.js","services/Server.js","store/ducks/task/sagas.js","components/TodoItem/styles.js","components/TodoItem/index.js","components/ErrorBox/styles.js","components/ErrorBox/index.js","pages/App/styles.js","pages/App/index.js","store/rootSaga.js","store/rootReducer.js","store/index.js","index.js"],"names":["createGlobalStyle","initialState","taskList","showError","addTask","userData","task","avatar_url","name","login","type","payload","id","Date","getTime","userName","avatar","Server","Axios","create","baseURL","fetchUser","watchFetchUser","action","call","get","data","addTaskAction","put","takeEvery","Container","styled","div","Image","img","Content","UserName","Task","RemoveButton","App","props","className","imageSrc","onRemoveClick","onClick","src","alt","ErrorBox","text","TodoContainer","form","Title","h1","InputContainer","Input","input","AddButton","button","TodoListContainer","EmptyListMessage","TaskItem","TodoItem","Error","userNameRef","useRef","useState","username","setUserName","setTask","dispatch","useDispatch","useSelector","onSubmit","e","preventDefault","trim","fetchUserAction","requestFetchUser","current","focus","ref","value","onChange","target","placeholder","length","map","taskItem","key","removeTaskAction","handleRemoveTask","rootSaga","all","rootReducer","combineReducers","state","newState","push","filter","sagaMiddleware","createSagaMiddleware","Store","createStore","applyMiddleware","run","ReactDOM","render","StrictMode","GlobalStyles","store","document","getElementById"],"mappings":"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","file":"static/js/main.8062c2d6.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\r\n\r\nexport default createGlobalStyle`\r\n :root{\r\n    --accent-color: #ff944d;\r\n    --accent-color-active: #ff751a;\r\n    --text-color: #ffffff;\r\n    --background-color: #333333;\r\n    --list-container-background: #232323;\r\n    --error-color: #ff4d4d;\r\n  }\r\n\r\n  * {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n    outline: 0;\r\n  }\r\n\r\n  html {\r\n    font-size: 62.5%;\r\n  }\r\n\r\n  body, textarea, input, button {\r\n    color: var(--text-color);\r\n    font-size: 1.6rem;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    font-family: 'Poppins', sans-serif;\r\n  }\r\n\r\n  body {\r\n    background: var(--background-color);\r\n  }\r\n\r\n  html, body, #root {\r\n    height: 100%;\r\n  }\r\n`\r\n","import { ADD_TASK, REMOVE_TASK_BY_ID, USER_FETCH_FAILED } from './types'\r\n\r\nconst initialState = {\r\n  taskList: [],\r\n  showError: false,\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  const { type, payload } = action\r\n\r\n  switch (type) {\r\n    case ADD_TASK: {\r\n      const newState = { ...state, showError: false }\r\n      newState.taskList.push(payload)\r\n      return newState\r\n    }\r\n\r\n    case REMOVE_TASK_BY_ID: {\r\n      const newState = { ...state }\r\n      newState.taskList = newState.taskList.filter(({ id }) => id !== payload)\r\n      return newState\r\n    }\r\n\r\n    case USER_FETCH_FAILED: return { ...state, showError: true }\r\n\r\n    default: return state\r\n  }\r\n}\r\n","import {\r\n  ADD_TASK,\r\n  REMOVE_TASK_BY_ID,\r\n  USER_FETCH_REQUESTED,\r\n  USER_FETCH_FAILED,\r\n} from './types'\r\n\r\nexport const addTask = (userData, task) => {\r\n  const { avatar_url, name, login } = userData\r\n  const id = new Date().getTime()\r\n\r\n  return {\r\n    type: ADD_TASK,\r\n    payload: {\r\n      id,\r\n      task,\r\n      name,\r\n      userName: login,\r\n      avatar: avatar_url,\r\n    },\r\n  }\r\n}\r\n\r\nexport const removeTaskById = (taskId) => ({\r\n  type: REMOVE_TASK_BY_ID,\r\n  payload: taskId\r\n})\r\n\r\nexport const requestFetchUser = (userName, task) => ({\r\n  type: USER_FETCH_REQUESTED,\r\n  payload: {\r\n    userName,\r\n    task,\r\n  }\r\n})\r\n\r\nexport const fetchUserFailed = () => ({\r\n  type: USER_FETCH_FAILED,\r\n})\r\n","export const USER_FETCH_REQUESTED = '@task/USER_FETCH_REQUESTED'\r\nexport const USER_FETCH_FAILED = '@task/USER_FETCH_FAILED'\r\nexport const ADD_TASK = '@task/ADD_TASK'\r\nexport const REMOVE_TASK_BY_ID = '@task/REMOVE_TASK_BY_ID'\r\n","import Axios from 'axios'\r\n\r\nconst Server = Axios.create({\r\n  baseURL: 'https://api.github.com'\r\n})\r\n\r\nexport default Server\r\n","import { takeEvery, put, call } from 'redux-saga/effects'\r\nimport { USER_FETCH_REQUESTED } from './types'\r\nimport { addTask, fetchUserFailed } from './actions'\r\nimport { Server } from 'services'\r\n\r\nexport function* fetchUser(action) {\r\n  try {\r\n    const { userName, task } = action.payload\r\n    const { data } = yield call(Server.get, `users/${userName}`)\r\n    const addTaskAction = addTask(data, task)\r\n    yield put(addTaskAction)\r\n  } catch (e) {\r\n    yield put(fetchUserFailed())\r\n  }\r\n}\r\n\r\nexport function* watchFetchUser() {\r\n  yield takeEvery(USER_FETCH_REQUESTED, fetchUser)\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n  border-radius: 5px;\r\n  border: 1px solid rgba(255,255,255,0.1);\r\n  padding: 1.6rem;\r\n  position: relative;\r\n  overflow: hidden;\r\n  display: flex;\r\n  align-items: center;\r\n  transition: all .2s ease-in-out;\r\n\r\n  &:hover{\r\n    border: 1px solid rgba(255,255,255,0.2);\r\n  }\r\n`\r\n\r\nexport const Image = styled.img`\r\n  width: 5rem;\r\n  height: 5rem;\r\n  border-radius: 100%;\r\n  border: none;\r\n  outline: none;\r\n`\r\n\r\nexport const Content = styled.div`\r\n  flex: 1;\r\n  margin-left: 1.6rem;\r\n  margin-right: 2.4rem;\r\n  overflow: hidden;\r\n`\r\n\r\nexport const UserName = styled.div`\r\n  font-weight: bold;\r\n  font-size: 1.8rem;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n`\r\n\r\nexport const Task = styled.div``\r\n\r\nexport const RemoveButton = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  width: 3rem;\r\n  height: 3rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  transition: all .2s ease-in-out;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  background: rgba(255,255,255,0.1);\r\n  border-bottom-left-radius: 5px;\r\n\r\n  &:hover{\r\n    color: var(--accent-color);\r\n  }\r\n`\r\n","import React from 'react'\r\nimport {\r\n  Container,\r\n  Image,\r\n  UserName,\r\n  Task,\r\n  RemoveButton,\r\n  Content,\r\n} from './styles'\r\n\r\nconst App = (props) => {\r\n  const { className, imageSrc, userName, task, onRemoveClick } = props\r\n\r\n  return (\r\n    <Container className={className}>\r\n      <RemoveButton onClick={onRemoveClick}>x</RemoveButton>\r\n\r\n      <Image src={imageSrc} alt={userName} />\r\n\r\n      <Content>\r\n        <UserName>{userName}</UserName>\r\n        <Task>{task}</Task>\r\n      </Content>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n  border-radius: 5px;\r\n  padding: 0.8rem 1.6rem;\r\n  font-weight: bold;\r\n  display: inline-block;\r\n  margin-right: auto;\r\n  color: var(--text-color);\r\n  background: var(--error-color);\r\n`\r\n","import React from 'react'\r\nimport { Container } from './styles'\r\n\r\nconst ErrorBox = (props) => {\r\n  const { className, text } = props\r\n  return <Container className={className}>{text}</Container>\r\n}\r\n\r\nexport default ErrorBox\r\n","import styled from 'styled-components'\r\nimport TodoItem from 'components/TodoItem'\r\nimport ErrorBox from 'components/ErrorBox'\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 100%;\r\n  padding: 3.2rem 0;\r\n`\r\n\r\nexport const TodoContainer = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 40%;\r\n  max-width: 600px;\r\n  min-width: 360px;\r\n`\r\n\r\nexport const Title = styled.h1`\r\n  color: var(--text-color);\r\n  margin-bottom: 3.2rem;\r\n  text-align: center;\r\n`\r\n\r\nexport const InputContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n`\r\n\r\nexport const Input = styled.input`\r\n  margin: 8px 0;\r\n  width: calc(50% - 8px);\r\n  padding: 1.6rem;\r\n  background: var(--background-color);\r\n  border: none;\r\n  border: 2px solid rgba(255, 255, 255, 0.6);\r\n  border-radius: 5px;\r\n  transition: all .2s ease-in-out;\r\n  outline: none;\r\n\r\n  &:focus {\r\n    background: rgba(0,0,0,0.1);\r\n    border: 2px solid rgba(255, 255, 255, 0.8);\r\n  }\r\n`\r\n\r\nexport const AddButton = styled.button`\r\n  padding: 1.6rem 2.4rem;\r\n  background: var(--accent-color);\r\n  transition: background .2s ease-in-out;\r\n  outline: none;\r\n  border: none;\r\n  border-radius: 5px;\r\n  margin: 0.8rem 0 3.2rem 0;\r\n  width: 100%;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  font-size: 1.8rem;\r\n\r\n  &:hover, &:active{\r\n    background: var(--accent-color-active);\r\n  }\r\n`\r\n\r\nexport const TodoListContainer = styled.div`\r\n  background: var(--list-container-background);\r\n  padding: 3.2rem;\r\n  border-radius: 5px;\r\n  width: 100%;\r\n`\r\n\r\nexport const EmptyListMessage = styled.div`\r\n  color: rgba(255, 255, 255, 0.4);\r\n  text-align: center;\r\n`\r\n\r\nexport const TaskItem = styled(TodoItem)`\r\n  margin-bottom: 8px;\r\n`\r\n\r\nexport const Error = styled(ErrorBox)`\r\n  margin-bottom: 1.6rem;\r\n`\r\n","import React, { useState, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { removeTaskById, requestFetchUser } from 'store/ducks/task'\r\nimport {\r\n  Container,\r\n  InputContainer,\r\n  Input,\r\n  TodoListContainer,\r\n  TodoContainer,\r\n  Title,\r\n  EmptyListMessage,\r\n  AddButton,\r\n  TaskItem,\r\n  Error,\r\n} from './styles'\r\n\r\nconst App = () => {\r\n  const userNameRef = useRef(null)\r\n  const [username, setUserName] = useState('')\r\n  const [task, setTask] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n  const { taskList, showError } = useSelector(({ Task }) => Task)\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (!username.trim() || !task.trim()) return\r\n\r\n    const fetchUserAction = requestFetchUser(username, task)\r\n    dispatch(fetchUserAction)\r\n\r\n    setUserName('')\r\n    setTask('')\r\n\r\n    userNameRef.current.focus()\r\n  }\r\n\r\n  const handleRemoveTask = (id) => {\r\n    const removeTaskAction = removeTaskById(id)\r\n    dispatch(removeTaskAction)\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <TodoContainer onSubmit={handleSubmit}>\r\n        <Title>Redux Saga Todo List</Title>\r\n\r\n        <InputContainer>\r\n          <Input\r\n            ref={userNameRef}\r\n            value={username}\r\n            onChange={(e) => setUserName(e.target.value)}\r\n            placeholder=\"Github Username\"\r\n          />\r\n\r\n          <Input\r\n            value={task}\r\n            onChange={(e) => setTask(e.target.value)}\r\n            placeholder=\"Task\"\r\n          />\r\n        </InputContainer>\r\n\r\n        <AddButton type=\"submit\">Add Task +</AddButton>\r\n\r\n        {!!showError && <Error text=\"Uer not found!\" />}\r\n\r\n        <TodoListContainer>\r\n          {!taskList.length && (\r\n            <EmptyListMessage>No Task to Show</EmptyListMessage>\r\n          )}\r\n\r\n          {\r\n            taskList.map((taskItem) => {\r\n              const { id, userName, task, name, avatar } = taskItem\r\n              const onRemove = () => handleRemoveTask(id)\r\n\r\n              return (\r\n                <TaskItem\r\n                  key={id}\r\n                  task={task}\r\n                  imageSrc={avatar}\r\n                  onRemoveClick={onRemove}\r\n                  userName={name || userName}\r\n                />\r\n              )\r\n            })\r\n          }\r\n        </TodoListContainer>\r\n      </TodoContainer>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { all } from 'redux-saga/effects'\r\nimport { watchFetchUser } from './ducks/task'\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    watchFetchUser(),\r\n  ])\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { Task } from './ducks/task'\r\n\r\nconst rootReducer = combineReducers({\r\n  Task,\r\n})\r\n\r\nexport default rootReducer\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport rootSaga from './rootSaga'\r\nimport rootReducer from './rootReducer'\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\nconst Store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(sagaMiddleware)\r\n)\r\n\r\nsagaMiddleware.run(rootSaga)\r\n\r\nexport default Store\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport GlobalStyles from 'styles/GlobalStyles'\r\nimport App from 'pages/App'\r\nimport Store from 'store'\r\nimport 'typeface-poppins'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <GlobalStyles />\r\n    <Provider store={Store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n"],"sourceRoot":""}